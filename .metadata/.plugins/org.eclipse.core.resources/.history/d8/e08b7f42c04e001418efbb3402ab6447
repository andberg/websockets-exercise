package se.berglund.datastorage;

import java.util.ArrayList;

import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;

import se.berglund.models.Category;
import se.berglund.models.Postit;

/* CurrentWhiteboardManager-class manages functionality for 
 * when currentWhiteboard is set from client-side. This class
 * have methods to GET all data for current whiteboard by
 * contacting the MySQL database via Hibernate.
 * */

public class CurrentWhiteboardManager {

	private CurrentWhiteboardManager() {
	}

	public ArrayList<Category> getAllCategoriesForCurrentWhiteboard() {

		SessionFactory sessFactory = HibernateSessionFactory
				.getSessionFactory();
		Session session = sessFactory.openSession();
		Transaction tr = session.beginTransaction();
		try {
			Query query = session
					.createQuery("from Category c WHERE whiteboardId = :id ");
			query.setParameter("id", currentWhiteboardId);

			@SuppressWarnings("unchecked")
			ArrayList<Category> categories = (ArrayList<Category>) query.list();
			tr.commit();
			return categories;
			
		} catch (Exception e) {
			e.printStackTrace();
			tr.rollback();
			return null;
			
		} finally {
			session.close();
		}

	}

	public ArrayList<Postit> getAllPostitsForCurrentWhiteboard() {

		SessionFactory sessFactory = HibernateSessionFactory
				.getSessionFactory();
		Session session = sessFactory.openSession();
		Transaction tr = session.beginTransaction();
		try {
			Query query = session
					.createQuery("from Postit p WHERE whiteboardId = :id ");
			query.setParameter("id", currentWhiteboardId);
			
			@SuppressWarnings("unchecked")
			ArrayList<Postit> postits = (ArrayList<Postit>) query.list();
			tr.commit();
			return postits;

		} catch (Exception e){
			e.printStackTrace();
			tr.rollback();
			return null; 
			
		} finally {
			session.close(); 
		}
	}

}
